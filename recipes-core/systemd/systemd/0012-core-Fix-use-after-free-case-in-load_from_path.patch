From 4392070160a341948c81e2ea9c79f05db5ed69cb Mon Sep 17 00:00:00 2001
From: Khem Raj <raj.khem@gmail.com>
Date: Sun, 16 Dec 2018 20:58:35 -0800
Subject: [PATCH 12/12] core: Fix use after free case in load_from_path()

ensure that mfree() on filename is called after the logging function
which uses the string pointed by filename

Signed-off-by: Khem Raj <raj.khem@gmail.com>
---
 src/core/load-fragment.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/src/core/load-fragment.c b/src/core/load-fragment.c
index 2082166afb..6289ce7b9f 100644
--- a/src/core/load-fragment.c
+++ b/src/core/load-fragment.c
@@ -4327,7 +4327,6 @@ static int load_from_path(Unit *u, const char *path) {
                                 r = open_follow(&filename, &f, symlink_names, &id);
                         if (r >= 0)
                                 break;
-                        filename = mfree(filename);
 
                         /* ENOENT means that the file is missing or is a dangling symlink.
                          * ENOTDIR means that one of paths we expect to be is a directory
@@ -4336,9 +4335,12 @@ static int load_from_path(Unit *u, const char *path) {
                          */
                         if (r == -EACCES)
                                 log_debug_errno(r, "Cannot access \"%s\": %m", filename);
-                        else if (!IN_SET(r, -ENOENT, -ENOTDIR))
+                        else if (!IN_SET(r, -ENOENT, -ENOTDIR)) {
+                                filename = mfree(filename);
                                 return r;
+                        }
 
+                        filename = mfree(filename);
                         /* Empty the symlink names for the next run */
                         set_clear_free(symlink_names);
                 }
-- 
2.17.1

